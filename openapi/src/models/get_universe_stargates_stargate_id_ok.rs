/*
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.33
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetUniverseStargatesStargateIdOk : 200 ok object
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetUniverseStargatesStargateIdOk {
    #[serde(rename = "destination")]
    pub destination: Box<models::GetUniverseStargatesStargateIdDestination>,
    /// name string
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "position")]
    pub position: Box<models::GetUniverseStargatesStargateIdPosition>,
    /// stargate_id integer
    #[serde(rename = "stargate_id")]
    pub stargate_id: i32,
    /// The solar system this stargate is in
    #[serde(rename = "system_id")]
    pub system_id: i32,
    /// type_id integer
    #[serde(rename = "type_id")]
    pub type_id: i32,
}

impl GetUniverseStargatesStargateIdOk {
    /// 200 ok object
    pub fn new(destination: models::GetUniverseStargatesStargateIdDestination, name: String, position: models::GetUniverseStargatesStargateIdPosition, stargate_id: i32, system_id: i32, type_id: i32) -> GetUniverseStargatesStargateIdOk {
        GetUniverseStargatesStargateIdOk {
            destination: Box::new(destination),
            name,
            position: Box::new(position),
            stargate_id,
            system_id,
            type_id,
        }
    }
}

